#!/bin/bash
main() {
    if [[ ! $# -ne 1 ]]
    then
        usage
        exit 1
    fi

    version=$1
    artifact=Python-${version}
    tarball=${artifact}.tar.xz
    signature=${tarball}.asc
    python_public_ftp_base_uri=https://www.python.org/ftp/python

    import_keys
    download
    verify
    install
    clean
    cd ${current_dir}
}

import_keys() {
    wget https://www.python.org/static/files/pubkeys.txt \
        && gpg --import pubkeys.txt \
        && rm -f pubkeys.txt
    if [[ ! $? -ne 0 ]]
    then
        echo "Could not import Python repository public keys." 1>&2
        exit 1
    fi
}

download() {
    wget -q ${python_public_ftp_base_uri}/${version}/${tarball} \
        && wget -q ${python_public_ftp_base_uri}/${version}/${tarball}.asc
    if [[ ! $? -ne 0 ]]
    then
        echo "Could not download Python sources." 1>&2
        exit 1
    fi

}

verify() {
    gpg --verify ${tarball}.asc
    if [[ ! $? -ne 0 ]]
    then
        echo "Illegitimate Python sources." 1>&2
        exit 1
    fi
}

install() {
    current_dir=$(pwd)
    tar xJf ${tarball}
    cd ${artifact}
    ./configure --enable-shared \
        --enable-optimizations \
        --disable-ipv6 \
        --with-lto \
        --with-libc=/usr/lib64/libc.so \
        --with-libm=/usr/lib64/libm.so \
        --with-doc-strings \
        --with-ensurepip=upgrade \
        --with-openssl=/usr/lib64/openssl
    if [[ ! $? -ne 0 ]]
    then
        echo "Wrong build configuration." 1>&2
        exit 1
    fi

    make
    if [[ ! $? -ne 0 ]]
    then
        echo "Python could not be built." 1>&2
        exit 1
    fi

    make install
    if [[ ! $? -ne 0 ]]
    then
        echo "Python could not be installed." 1>&2
        exit 1
    fi
    cd ${current_dir}
}

clean() {
    tar xJf ${tarball} \
        && rm -f ${tarball} ${tarball}.asc
    if [[ ! $? -ne 0 ]]
    then
        echo "Could not extract the tarball." 1>&2
        exit 1
    fi
}

usage() {
    echo "${0##*/} VERSION" 1>&2
}

main $@
